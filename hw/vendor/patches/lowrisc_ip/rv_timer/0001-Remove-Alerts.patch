diff --git a/rtl/rv_timer.sv b/rtl/rv_timer.sv
index 2325d5b4ad..ab6239902e 100644
--- a/rtl/rv_timer.sv
+++ b/rtl/rv_timer.sv
@@ -3,22 +3,15 @@
 // SPDX-License-Identifier: Apache-2.0
 //
 
-
 `include "prim_assert.sv"
 
-module rv_timer import rv_timer_reg_pkg::*;
-#(
-  parameter logic [NumAlerts-1:0] AlertAsyncOn = {NumAlerts{1'b1}}
-) (
+module rv_timer import rv_timer_reg_pkg::*; (
   input clk_i,
   input rst_ni,
 
   input  tlul_pkg::tl_h2d_t tl_i,
   output tlul_pkg::tl_d2h_t tl_o,
 
-  input  prim_alert_pkg::alert_rx_t [NumAlerts-1:0] alert_rx_i,
-  output prim_alert_pkg::alert_tx_t [NumAlerts-1:0] alert_tx_o,
-
   output logic intr_timer_expired_hart0_timer0_o
 );
 
@@ -113,7 +106,6 @@ module rv_timer import rv_timer_reg_pkg::*;
   end : gen_harts
 
   // Register module
-  logic [NumAlerts-1:0] alert_test, alerts;
   rv_timer_reg_top u_reg (
     .clk_i,
     .rst_ni,
@@ -125,39 +117,13 @@ module rv_timer import rv_timer_reg_pkg::*;
     .hw2reg,
 
     // SEC_CM: BUS.INTEGRITY
-    .intg_err_o (alerts[0])
+    .intg_err_o (0)
   );
 
-  // Alerts
-  assign alert_test = {
-    reg2hw.alert_test.q &
-    reg2hw.alert_test.qe
-  };
-
-  for (genvar i = 0; i < NumAlerts; i++) begin : gen_alert_tx
-    prim_alert_sender #(
-      .AsyncOn(AlertAsyncOn[i]),
-      .IsFatal(1'b1)
-    ) u_prim_alert_sender (
-      .clk_i,
-      .rst_ni,
-      .alert_test_i  ( alert_test[i] ),
-      .alert_req_i   ( alerts[0]     ),
-      .alert_ack_o   (               ),
-      .alert_state_o (               ),
-      .alert_rx_i    ( alert_rx_i[i] ),
-      .alert_tx_o    ( alert_tx_o[i] )
-    );
-  end
-
   ////////////////
   // Assertions //
   ////////////////
   `ASSERT_KNOWN(TlODValidKnown, tl_o.d_valid)
   `ASSERT_KNOWN(TlOAReadyKnown, tl_o.a_ready)
-  `ASSERT_KNOWN(AlertsKnown_A, alert_tx_o)
   `ASSERT_KNOWN(IntrTimerExpiredHart0Timer0Known, intr_timer_expired_hart0_timer0_o)
-
-  // Alert assertions for reg_we onehot check
-  `ASSERT_PRIM_REG_WE_ONEHOT_ERROR_TRIGGER_ALERT(RegWeOnehotCheck_A, u_reg, alert_tx_o[0])
 endmodule
